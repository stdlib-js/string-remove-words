{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isStringArray from '@stdlib/assert-is-string-array';\nimport uppercase from '@stdlib/string-uppercase';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport tokenize from '@stdlib/nlp-tokenize';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Removes a list of words from a string.\n*\n* @param {string} str - input string\n* @param {StringArray} words - array of words to be removed\n* @param {boolean} [ignoreCase=false] - boolean indicating whether to perform a case-insensitive operation\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an array of strings\n* @throws {TypeError} third argument must be a boolean\n* @returns {string} output string\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ] );\n* // returns 'beep  Foo bar'\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ], true );\n* // returns 'beep   bar'\n*/\nfunction removeWords( str, words, ignoreCase ) {\n\tvar tokens;\n\tvar token;\n\tvar list;\n\tvar flg;\n\tvar out;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '1PF3F', str ) );\n\t}\n\tif ( !isStringArray( words ) ) {\n\t\tthrow new TypeError( format( '1PFAS', words ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( ignoreCase ) ) {\n\t\t\tthrow new TypeError( format( '1PFAL', ignoreCase ) );\n\t\t}\n\t}\n\ttokens = tokenize( str, true );\n\tN = words.length;\n\tout = [];\n\tif ( ignoreCase ) {\n\t\tlist = words.slice();\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tlist[ i ] = uppercase( list[ i ] );\n\t\t}\n\t\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\t\tflg = true;\n\t\t\ttoken = uppercase( tokens[ i ] );\n\t\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\t\tif ( list[ j ] === token ) {\n\t\t\t\t\tflg = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flg ) {\n\t\t\t\tout.push( tokens[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn out.join( '' );\n\t}\n\t// Case: case-sensitive\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tflg = true;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( words[ j ] === token ) {\n\t\t\t\tflg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( flg ) {\n\t\t\tout.push( token );\n\t\t}\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nexport default removeWords;\n"],"names":["removeWords","str","words","ignoreCase","tokens","token","list","flg","out","N","i","j","isString","TypeError","format","isStringArray","arguments","length","isBoolean","tokenize","slice","uppercase","push","join"],"mappings":";;ykBAqDA,SAASA,EAAaC,EAAKC,EAAOC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMC,EAAUX,GACf,MAAM,IAAIY,UAAWC,EAAQ,QAASb,IAEvC,IAAMc,EAAeb,GACpB,MAAM,IAAIW,UAAWC,EAAQ,QAASZ,IAEvC,GAAKc,UAAUC,OAAS,IACjBC,EAAWf,GAChB,MAAM,IAAIU,UAAWC,EAAQ,QAASX,IAMxC,GAHAC,EAASe,EAAUlB,GAAK,GACxBQ,EAAIP,EAAMe,OACVT,EAAM,GACDL,EAAa,CAEjB,IADAG,EAAOJ,EAAMkB,QACPV,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,EAAMI,GAAMW,EAAWf,EAAMI,IAE9B,IAAMA,EAAI,EAAGA,EAAIN,EAAOa,OAAQP,IAAM,CAGrC,IAFAH,GAAM,EACNF,EAAQgB,EAAWjB,EAAQM,IACrBC,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKL,EAAMK,KAAQN,EAAQ,CAC1BE,GAAM,EACN,KACA,CAEGA,GACJC,EAAIc,KAAMlB,EAAQM,GAEnB,CACD,OAAOF,EAAIe,KAAM,GACjB,CAED,IAAMb,EAAI,EAAGA,EAAIN,EAAOa,OAAQP,IAAM,CAGrC,IAFAL,EAAQD,EAAQM,GAChBH,GAAM,EACAI,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKT,EAAOS,KAAQN,EAAQ,CAC3BE,GAAM,EACN,KACA,CAEGA,GACJC,EAAIc,KAAMjB,EAEX,CACD,OAAOG,EAAIe,KAAM,GAClB"}