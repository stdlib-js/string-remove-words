{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isStringArray = require( '@stdlib/assert-is-string-array' );\nvar uppercase = require( '@stdlib/string-uppercase' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar tokenize = require( '@stdlib/nlp-tokenize' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Removes a list of words from a string.\n*\n* @param {string} str - input string\n* @param {StringArray} words - array of words to be removed\n* @param {boolean} [ignoreCase=false] - boolean indicating whether to perform a case-insensitive operation\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be an array of strings\n* @throws {TypeError} third argument must be a boolean\n* @returns {string} output string\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ] );\n* // returns 'beep  Foo bar'\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ], true );\n* // returns 'beep   bar'\n*/\nfunction removeWords( str, words, ignoreCase ) {\n\tvar tokens;\n\tvar token;\n\tvar list;\n\tvar flg;\n\tvar out;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isStringArray( words ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array of strings. Value: `%s`.', words ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( ignoreCase ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a boolean. Value: `%s`.', ignoreCase ) );\n\t\t}\n\t}\n\ttokens = tokenize( str, true );\n\tN = words.length;\n\tout = [];\n\tif ( ignoreCase ) {\n\t\tlist = words.slice();\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tlist[ i ] = uppercase( list[ i ] );\n\t\t}\n\t\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\t\tflg = true;\n\t\t\ttoken = uppercase( tokens[ i ] );\n\t\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\t\tif ( list[ j ] === token ) {\n\t\t\t\t\tflg = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flg ) {\n\t\t\t\tout.push( tokens[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn out.join( '' );\n\t}\n\t// Case: case-sensitive\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tflg = true;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( words[ j ] === token ) {\n\t\t\t\tflg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( flg ) {\n\t\t\tout.push( token );\n\t\t}\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = removeWords;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove a list of words from a string.\n*\n* @module @stdlib/string-remove-words\n*\n* @example\n* var removeWords = require( '@stdlib/string-remove-words' );\n*\n* var str = 'beep boop Foo bar';\n* var words = [ 'boop', 'foo' ];\n*\n* var out = removeWords( str, words );\n* // returns 'beep  Foo bar'\n*\n* // Case-insensitive:\n* out = removeWords( str, words, true )\n* //returns 'beep   bar'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAY,QAAS,0BAA2B,EAChDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAW,QAAS,sBAAuB,EAC3CC,EAAS,QAAS,uBAAwB,EA0B9C,SAASC,EAAaC,EAAKC,EAAOC,EAAa,CAC9C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACd,EAAUI,CAAI,EACnB,MAAM,IAAI,UAAWF,EAAQ,kEAAmEE,CAAI,CAAE,EAEvG,GAAK,CAACP,EAAeQ,CAAM,EAC1B,MAAM,IAAI,UAAWH,EAAQ,8EAA+EG,CAAM,CAAE,EAErH,GAAK,UAAU,OAAS,GAClB,CAACN,EAAWO,CAAW,EAC3B,MAAM,IAAI,UAAWJ,EAAQ,mEAAoEI,CAAW,CAAE,EAMhH,GAHAC,EAASN,EAAUG,EAAK,EAAK,EAC7BQ,EAAIP,EAAM,OACVM,EAAM,CAAC,EACFL,EAAa,CAEjB,IADAG,EAAOJ,EAAM,MAAM,EACbQ,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,EAAMI,CAAE,EAAIf,EAAWW,EAAMI,CAAE,CAAE,EAElC,IAAMA,EAAI,EAAGA,EAAIN,EAAO,OAAQM,IAAM,CAGrC,IAFAH,EAAM,GACNF,EAAQV,EAAWS,EAAQM,CAAE,CAAE,EACzBC,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKL,EAAMK,CAAE,IAAMN,EAAQ,CAC1BE,EAAM,GACN,KACD,CAEIA,GACJC,EAAI,KAAMJ,EAAQM,CAAE,CAAE,CAExB,CACA,OAAOF,EAAI,KAAM,EAAG,CACrB,CAEA,IAAME,EAAI,EAAGA,EAAIN,EAAO,OAAQM,IAAM,CAGrC,IAFAL,EAAQD,EAAQM,CAAE,EAClBH,EAAM,GACAI,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKT,EAAOS,CAAE,IAAMN,EAAQ,CAC3BE,EAAM,GACN,KACD,CAEIA,GACJC,EAAI,KAAMH,CAAM,CAElB,CACA,OAAOG,EAAI,KAAM,EAAG,CACrB,CAKAf,EAAO,QAAUO,IC5EjB,IAAIY,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isStringArray", "uppercase", "isBoolean", "isString", "tokenize", "format", "removeWords", "str", "words", "ignoreCase", "tokens", "token", "list", "flg", "out", "N", "i", "j", "main"]
}
