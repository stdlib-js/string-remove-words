// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-uppercase@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/nlp-tokenize@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var m=r,o=s,a=e.isPrimitive,d=t.isPrimitive,l=i,g=n;var h=function(r,s,e){var t,i,n,h,f,p,j,u;if(!d(r))throw new TypeError(g("invalid argument. First argument must be a string. Value: `%s`.",r));if(!m(s))throw new TypeError(g("invalid argument. Second argument must be an array of strings. Value: `%s`.",s));if(arguments.length>2&&!a(e))throw new TypeError(g("invalid argument. Third argument must be a boolean. Value: `%s`.",e));if(t=l(r,!0),p=s.length,f=[],e){for(n=s.slice(),j=0;j<p;j++)n[j]=o(n[j]);for(j=0;j<t.length;j++){for(h=!0,i=o(t[j]),u=0;u<p;u++)if(n[u]===i){h=!1;break}h&&f.push(t[j])}return f.join("")}for(j=0;j<t.length;j++){for(i=t[j],h=!0,u=0;u<p;u++)if(s[u]===i){h=!1;break}h&&f.push(i)}return f.join("")};export{h as default};
//# sourceMappingURL=index.mjs.map
